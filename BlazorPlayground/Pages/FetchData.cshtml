@page "/fetchdata"

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="form-group row">
        <label for="staticEmail" class="col-sm-2 col-form-label">Temp. display</label>
        <div class="col-sm-10">
            <div class="btn-group btn-group-toggle" data-toggle="buttons">
                <label class="btn btn-secondary @(showCelcius? "active" : null)">
                    <input type="radio" name="showCelcius" checked="@showCelcius" onclick="@(()=>ShowDegreesInCelcius(true))" /> Celcius
                </label>
                <label class="btn btn-secondary @(showCelcius? null : "active")">
                    <input type="radio" name="showCelcius" checked="@(!showCelcius)" onclick="@(()=>ShowDegreesInCelcius(false))" /> Farenheit
                </label>
            </div>
        </div>
    </div>
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp.</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>
                        @if (showCelcius)
                        {
                            <span>@forecast.TemperatureC&deg;C</span>
                        }
                        else
                        {
                            <span>@forecast.TemperatureF&deg;F</span>
                        }
                    </td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@functions
{
bool showCelcius = true;

IEnumerable<Services.WeatherData> forecasts = null;

protected override async Task OnInitAsync()
{
    await Task.Delay(1000);
    forecasts = await this.GetWeatherAsync();
}

private async Task<IEnumerable<Services.WeatherData>> GetWeatherAsync()
{
    var service = new Services.WeatherService();
    return await service.GetWeatherAsync();
}

private void ShowDegreesInCelcius(bool value)
{
    showCelcius = value;
}

}
